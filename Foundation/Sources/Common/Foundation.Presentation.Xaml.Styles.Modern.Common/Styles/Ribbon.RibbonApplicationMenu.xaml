<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:behaviors="clr-namespace: xxx.Foundation.Presentation.Behaviors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ xxx.Foundation.Presentation;Component/Themes/Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/ xxx.Foundation.Presentation;Component/Themes/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate TargetType="RibbonApplicationMenu"
                     x:Key="Templates.Ribbon.RibbonApplicationMenu"
                     xmlns:s="clr-namespace:System;assembly=mscorlib" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >
        <Grid Name="OuterGrid" SnapsToDevicePixels="True" Focusable="False">
            <RibbonToggleButton SmallImageSource="{TemplateBinding RibbonControlService.SmallImageSource}" ToolTipTitle="{TemplateBinding RibbonControlService.ToolTipTitle}" ToolTipDescription="{TemplateBinding RibbonControlService.ToolTipDescription}" ToolTipImageSource="{TemplateBinding RibbonControlService.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding RibbonControlService.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding RibbonControlService.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding RibbonControlService.ToolTipFooterImageSource}" IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="PART_ToggleButton" Width="Auto" Height="Auto" FocusVisualStyle="{TemplateBinding FrameworkElement.FocusVisualStyle}">
                <RibbonToggleButton.Style>
                    <Style TargetType="RibbonToggleButton">
                        <Style.Resources>
                            <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="Border.BorderBrush">
                            <Setter.Value>
                                <SolidColorBrush>#FF114EAF</SolidColorBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.Background">
                            <Setter.Value>
                                <SolidColorBrush>#FF114EAF</SolidColorBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderThickness">
                            <Setter.Value>
                                <Thickness>1,1,1,1</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="TextElement.Foreground">
                            <Setter.Value>
                                <RadialGradientBrush>
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Color="#FFD3D3D3" Offset="0" />
                                        <GradientStop Color="#FFFFFFFF" Offset="0.4" />
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ButtonBase.ClickMode">
                            <Setter.Value>
                                <x:Static Member="ClickMode.Press" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.FocusVisualStyle">
                            <Setter.Value>
                                <x:Null />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FocusManager.IsFocusScope">
                            <Setter.Value>
                                <s:Boolean>False</s:Boolean>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.VerticalAlignment">
                            <Setter.Value>
                                <x:Static Member="VerticalAlignment.Bottom" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ToolTipService.InitialShowDelay">
                            <Setter.Value>
                                <s:Int32>900</s:Int32>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ToolTipService.ShowDuration">
                            <Setter.Value>
                                <s:Int32>20000</s:Int32>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ToolTipService.BetweenShowDelay">
                            <Setter.Value>
                                <s:Int32>0</s:Int32>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RibbonToggleButton">
                                    <Grid Width="Auto" Height="Auto" SnapsToDevicePixels="True">
                                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                BorderBrush="{DynamicResource Brushes.Accent}"
                                                Name="MiddleBorder" 
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                Background="{DynamicResource Brushes.Accent}">
                                        </Border>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Image Source="{x:Null}" Width="16" Height="16" Margin="0,-0.5,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                            <Path Data="M0,0L2.25,3 4.5,0z" Fill="{TemplateBinding TextElement.Foreground}" StrokeThickness="0.5" Name="DownArrow" Margin="3.5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Path.Stroke>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#90FFFFFF" Offset="0" />
                                                            <GradientStop Color="#30FFFFFF" Offset="0.5" />
                                                            <GradientStop Color="#00FFFFFF" Offset="0.5" />
                                                            <GradientStop Color="#70FFFFFF" Offset="1" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                                <Path.RenderTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                </Path.RenderTransform>
                                            </Path>
                                        </StackPanel>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="UIElement.IsKeyboardFocused">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition Property="ToggleButton.IsChecked">
                                                    <Condition.Value>
                                                        <s:Boolean>False</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <SolidColorBrush>#80FFFFFF</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Panel.Background" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#A0FFFFFF" Offset="0" />
                                                            <GradientStop Color="#60FFFFFF" Offset="0.5" />
                                                            <GradientStop Color="#00FFFFFF" Offset="0.5" />
                                                            <GradientStop Color="#D0FFFFFF" Offset="1" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="UIElement.IsMouseOver">
                                                    <Condition.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                                <Condition Property="ToggleButton.IsChecked">
                                                    <Condition.Value>
                                                        <s:Boolean>False</s:Boolean>
                                                    </Condition.Value>
                                                </Condition>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <SolidColorBrush>#80FFFFFF</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Panel.Background" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#A0FFFFFF" Offset="0" />
                                                            <GradientStop Color="#60FFFFFF" Offset="0.5" />
                                                            <GradientStop Color="#00FFFFFF" Offset="0.5" />
                                                            <GradientStop Color="#D0FFFFFF" Offset="1" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                                            <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Panel.Background" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Border.CornerRadius" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <CornerRadius>0,0,0,0</CornerRadius>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Shape.Stroke" TargetName="DownArrow">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Shape.Fill" TargetName="DownArrow">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkDarkBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RibbonToggleButton.Style>
            </RibbonToggleButton>
            <Border Name="CenterBorder" Height="1" Margin="-1,-1,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Top" />
            <Popup IsOpen="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" SnapsToDevicePixels="True">
                
                    <Grid>
                        <Border BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" BorderBrush="{x:Null}" Background="{x:Null}" Name="PopupBorder">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Border BorderThickness="0,0,0,1" CornerRadius="2,2,0,0" BorderBrush="{x:Null}" Background="#00FFFFFF" Name="HeaderBorder" />
                                <Border BorderThickness="0,0,0,1" CornerRadius="2,2,0,0" BorderBrush="#80FFFFFF" Name="HeaderOverlayBorder">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="#A0FFFFFF" Offset="0" />
                                                <GradientStop Color="#60FFFFFF" Offset="0.5" />
                                                <GradientStop Color="#00FFFFFF" Offset="0.5" />
                                                <GradientStop Color="#D0FFFFFF" Offset="1" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="2" />
                                        <ColumnDefinition Width="300" />
                                    </Grid.ColumnDefinitions>
                                    <Border Background="#B8FFFFFF" Name="MainPaneBorder">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}" Name="PART_SubMenuScrollViewer" Grid.Row="1">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas Name="BackgroundCanvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                        <Rectangle RadiusX="2" RadiusY="2" Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                                                        <Rectangle RadiusX="2" RadiusY="2" Fill="{x:Null}" Name="OverlayRect" Width="Auto" Height="Auto" />
                                                    </Canvas>
                                                    <ItemsPresenter Name="ItemsPresenter" Grid.IsSharedSizeScope="True" />
                                                </Grid>
                                            </ScrollViewer>
                                            <Border BorderThickness="0,1,0,0" BorderBrush="{x:Null}" Background="#FFE5EFF9" Name="ResizeControl" Visibility="Collapsed" Grid.Row="2">
                                                <Thumb Name="PART_ResizeThumb">
                                                    <Thumb.Style>
                                                        <Style TargetType="Thumb">
                                                            <Style.Triggers>
                                                                <Trigger Property="FrameworkElement.FlowDirection">
                                                                    <Setter Property="FrameworkElement.Cursor">
                                                                        <Setter.Value>
                                                                            <Cursor>SizeNESW</Cursor>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Trigger.Value>
                                                                        <x:Static Member="FlowDirection.RightToLeft" />
                                                                    </Trigger.Value>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                            <Style.Resources>
                                                                <ResourceDictionary />
                                                            </Style.Resources>
                                                            <Setter Property="FrameworkElement.Width">
                                                                <Setter.Value>
                                                                    <s:Double>11</s:Double>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="FrameworkElement.Height">
                                                                <Setter.Value>
                                                                    <s:Double>11</s:Double>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="FrameworkElement.VerticalAlignment">
                                                                <Setter.Value>
                                                                    <x:Static Member="VerticalAlignment.Bottom" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="FrameworkElement.HorizontalAlignment">
                                                                <Setter.Value>
                                                                    <x:Static Member="HorizontalAlignment.Right" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="FrameworkElement.Cursor">
                                                                <Setter.Value>
                                                                    <Cursor>SizeNWSE</Cursor>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Control.Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="Thumb">
                                                                        <Border Background="#00FFFFFF">
                                                                            <Path Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z" Margin="0,0,2,2">
                                                                                <Path.Fill>
                                                                                    <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                                                                                        <DrawingBrush.Drawing>
                                                                                            <DrawingGroup>
                                                                                                <DrawingGroup.Children>
                                                                                                    <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                                                                                                </DrawingGroup.Children>
                                                                                            </DrawingGroup>
                                                                                        </DrawingBrush.Drawing>
                                                                                    </DrawingBrush>
                                                                                </Path.Fill>
                                                                            </Path>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <Border Background="#80FFFFFF" Name="PART_SubmenuPlaceholder" Height="Auto" Grid.Column="2">
                                        <ContentPresenter Content="{TemplateBinding RibbonApplicationMenu.AuxiliaryPaneContent}" ContentTemplate="{TemplateBinding RibbonApplicationMenu.AuxiliaryPaneContentTemplate}" ContentSource="AuxiliaryPaneContent" Name="PART_AuxiliaryPaneContentPresenter" />
                                    </Border>
                                    <Border BorderThickness="1,0,0,0" BorderBrush="{x:Null}" Background="#FFFFFFFF" Name="VerticalBorder" Width="2" HorizontalAlignment="Left" Grid.Column="1" />
                                    <Border BorderThickness="1,0,0,0" BorderBrush="#80FFFFFF" Background="#00FFFFFF" Name="VerticalOverlayBorder" Width="2" HorizontalAlignment="Left" Grid.Column="1" />
                                </Grid>
                                <Border BorderThickness="0,1,0,0" CornerRadius="0,0,2,2" BorderBrush="{x:Null}" Background="#00FFFFFF" Name="FooterBorder" Grid.Row="2">
                                    <Border CornerRadius="0,0,2,2" BorderBrush="#00FFFFFF" Name="FooterBackgroundOverlayBorder">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#A0FFFFFF" Offset="0" />
                                                    <GradientStop Color="#90FFFFFF" Offset="0.2" />
                                                    <GradientStop Color="#80FFFFFF" Offset="0.4" />
                                                    <GradientStop Color="#50FFFFFF" Offset="0.6" />
                                                    <GradientStop Color="#00FFFFFF" Offset="0.8" />
                                                    <GradientStop Color="#30FFFFFF" Offset="1" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <ContentPresenter Content="{TemplateBinding RibbonApplicationMenu.FooterPaneContent}" ContentTemplate="{TemplateBinding RibbonApplicationMenu.FooterPaneContentTemplate}" ContentSource="FooterPaneContent" Name="PART_FooterPaneContentPresenter" MinHeight="12" Margin="2,2,2,2" />
                                    </Border>
                                </Border>
                                <Border BorderThickness="0,1,0,0" CornerRadius="0,0,2,2" BorderBrush="#80FFFFFF" Background="#00FFFFFF" Name="FooterOverlayBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Grid>
                        </Border>
                        <Canvas>
                            <RibbonToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="PART_PopupToggleButton" Width="Auto" Height="Auto" Focusable="False" AutomationProperties.Name="" Canvas.Left="3" Canvas.Top="-24">
                                <RibbonToggleButton.Style>
                                    <Style TargetType="RibbonToggleButton">
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="Border.BorderBrush">
                                            <Setter.Value>
                                                <SolidColorBrush>#FF114EAF</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Panel.Background">
                                            <Setter.Value>
                                                <SolidColorBrush>#FF114EAF</SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Border.BorderThickness">
                                            <Setter.Value>
                                                <Thickness>1,1,1,1</Thickness>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="TextElement.Foreground">
                                            <Setter.Value>
                                                <RadialGradientBrush>
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStop Color="#FFD3D3D3" Offset="0" />
                                                        <GradientStop Color="#FFFFFFFF" Offset="0.4" />
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="ButtonBase.ClickMode">
                                            <Setter.Value>
                                                <x:Static Member="ClickMode.Press" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.FocusVisualStyle">
                                            <Setter.Value>
                                                <x:Null />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FocusManager.IsFocusScope">
                                            <Setter.Value>
                                                <s:Boolean>False</s:Boolean>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.VerticalAlignment">
                                            <Setter.Value>
                                                <x:Static Member="VerticalAlignment.Bottom" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="ToolTipService.InitialShowDelay">
                                            <Setter.Value>
                                                <s:Int32>900</s:Int32>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="ToolTipService.ShowDuration">
                                            <Setter.Value>
                                                <s:Int32>20000</s:Int32>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="ToolTipService.BetweenShowDelay">
                                            <Setter.Value>
                                                <s:Int32>0</s:Int32>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="RibbonToggleButton">
                                                    <Grid Width="Auto" Height="Auto" SnapsToDevicePixels="True">
                                                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="0,2,0,0" BorderBrush="#00FFFFFF" Name="MiddleBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Color="#90FFFFFF" Offset="0" />
                                                                    <GradientStop Color="#30FFFFFF" Offset="0.5" />
                                                                    <GradientStop Color="#00FFFFFF" Offset="0.5" />
                                                                    <GradientStop Color="#70FFFFFF" Offset="1" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                    </Border>
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                            <Image Source="{x:Null}" Width="16" Height="16" Margin="0,-0.5,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                                            <Path Data="M0,0L2.25,3 4.5,0z" Fill="{TemplateBinding TextElement.Foreground}" StrokeThickness="0.5" Name="DownArrow" Margin="3.5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                <Path.Stroke>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                        <LinearGradientBrush.GradientStops>
                                                                            <GradientStop Color="#90FFFFFF" Offset="0" />
                                                                            <GradientStop Color="#30FFFFFF" Offset="0.5" />
                                                                            <GradientStop Color="#00FFFFFF" Offset="0.5" />
                                                                            <GradientStop Color="#70FFFFFF" Offset="1" />
                                                                        </LinearGradientBrush.GradientStops>
                                                                    </LinearGradientBrush>
                                                                </Path.Stroke>
                                                                <Path.RenderTransform>
                                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </StackPanel>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="UIElement.IsKeyboardFocused">
                                                                    <Condition.Value>
                                                                        <s:Boolean>True</s:Boolean>
                                                                    </Condition.Value>
                                                                </Condition>
                                                                <Condition Property="ToggleButton.IsChecked">
                                                                    <Condition.Value>
                                                                        <s:Boolean>False</s:Boolean>
                                                                    </Condition.Value>
                                                                </Condition>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#80FFFFFF</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                        <Setter Property="Panel.Background" TargetName="MiddleBorder">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#A0FFFFFF" Offset="0" />
                                                                        <GradientStop Color="#60FFFFFF" Offset="0.5" />
                                                                        <GradientStop Color="#00FFFFFF" Offset="0.5" />
                                                                        <GradientStop Color="#D0FFFFFF" Offset="1" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiTrigger>
                                                        <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="UIElement.IsMouseOver">
                                                                <Condition.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Condition.Value>
                                                            </Condition>
                                                            <Condition Property="ToggleButton.IsChecked">
                                                                <Condition.Value>
                                                                    <s:Boolean>False</s:Boolean>
                                                                </Condition.Value>
                                                            </Condition>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="MiddleBorder" Value="DeepPink" />
                                                    </MultiTrigger>
                                                    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                                                        <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Panel.Background" TargetName="MiddleBorder">
                                                                <Setter.Value>
                                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                        <Setter Property="Border.CornerRadius" TargetName="MiddleBorder">
                                                            <Setter.Value>
                                                                <CornerRadius>0,0,0,0</CornerRadius>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Stroke" TargetName="DownArrow">
                                                                <Setter.Value>
                                                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Shape.Fill" TargetName="DownArrow">
                                                                <Setter.Value>
                                                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkDarkBrushKey}" />
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RibbonToggleButton.Style>
                            </RibbonToggleButton>
                        </Canvas>
                    </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="PART_SubMenuScrollViewer">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect">
                    <Setter.Value>
                        <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect">
                    <Setter.Value>
                        <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Canvas.Top" TargetName="OverlayRect">
                    <Setter.Value>
                        <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Canvas.Left" TargetName="OverlayRect">
                    <Setter.Value>
                        <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="RibbonMenuButton.HasGallery">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer">
                    <Setter.Value>
                        <x:Static Member="ScrollBarVisibility.Disabled" />
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer">
                    <Setter.Value>
                        <x:Static Member="ScrollBarVisibility.Disabled" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="RibbonMenuButton.CanUserResizeVertically">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                </MultiTrigger.Conditions>
                <Setter Property="UIElement.Visibility" TargetName="ResizeControl">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
                        <Condition.Value>
                            <s:Boolean>False</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="RibbonMenuButton.CanUserResizeVertically">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                </MultiTrigger.Conditions>
                <Setter Property="UIElement.Visibility" TargetName="ResizeControl">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Style" TargetName="PART_ResizeThumb">
                    <Setter.Value>
                        <Style TargetType="Thumb">
                            <Style.Resources>
                                <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>11</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Cursor">
                                <Setter.Value>
                                    <Cursor>SizeNS</Cursor>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Border Background="#00FFFFFF">
                                            <Path Margin="0,0,2,2" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                                <Path.Data>
                                                    <RectangleGeometry Rect="0,0,11,3" />
                                                </Path.Data>
                                                <Path.Fill>
                                                    <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <DrawingGroup.Children>
                                                                    <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                                                                </DrawingGroup.Children>
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Path.Fill>
                                            </Path>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="RibbonMenuButton.IsDropDownPositionedAbove">
                <Setter Property="Grid.Row" TargetName="ResizeControl">
                    <Setter.Value>
                        <s:Int32>0</s:Int32>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderThickness" TargetName="ResizeControl">
                    <Setter.Value>
                        <Thickness>0,0,0,1</Thickness>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonMenuButton.IsDropDownPositionedAbove">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="RibbonMenuButton.CanUserResizeVertically">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Style" TargetName="PART_ResizeThumb">
                    <Setter.Value>
                        <Style TargetType="Thumb">
                            <Style.Triggers>
                                <Trigger Property="FrameworkElement.FlowDirection">
                                    <Setter Property="FrameworkElement.Cursor">
                                        <Setter.Value>
                                            <Cursor>SizeNWSE</Cursor>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <x:Static Member="FlowDirection.RightToLeft" />
                                    </Trigger.Value>
                                </Trigger>
                            </Style.Triggers>
                            <Style.Resources>
                                <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="FrameworkElement.Width">
                                <Setter.Value>
                                    <s:Double>11</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>11</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.VerticalAlignment">
                                <Setter.Value>
                                    <x:Static Member="VerticalAlignment.Top" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.HorizontalAlignment">
                                <Setter.Value>
                                    <x:Static Member="HorizontalAlignment.Right" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Cursor">
                                <Setter.Value>
                                    <Cursor>SizeNESW</Cursor>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Border Background="#00FFFFFF">
                                            <Path Data="M0,0L0,3 3,3 3,6 6,6 6,9 9,9 9,11 11,11 11,0z" Margin="0,2,2,0">
                                                <Path.Fill>
                                                    <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <DrawingGroup.Children>
                                                                    <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                                                                </DrawingGroup.Children>
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Path.Fill>
                                            </Path>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="Popup.IsOpen" SourceName="PART_Popup">
                <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
                    <Setter.Value>
                        <x:Static Member="PopupAnimation.None" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                <Setter Property="UIElement.Visibility" TargetName="BackgroundCanvas">
                    <Setter.Value>
                        <x:Static Member="Visibility.Collapsed" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
                    <Setter.Value>
                        <x:Static Member="PopupAnimation.None" />
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground" TargetName="OuterGrid">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="PopupBorder">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="PopupBorder">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.CornerRadius" TargetName="PopupBorder">
                    <Setter.Value>
                        <CornerRadius>0,0,0,0</CornerRadius>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="HeaderBorder">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.CornerRadius" TargetName="HeaderBorder">
                    <Setter.Value>
                        <CornerRadius>0,0,0,0</CornerRadius>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="HeaderOverlayBorder">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="HeaderOverlayBorder">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.CornerRadius" TargetName="HeaderOverlayBorder">
                    <Setter.Value>
                        <CornerRadius>0,0,0,0</CornerRadius>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="MainPaneBorder">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="PART_SubmenuPlaceholder">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="VerticalBorder">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightLightBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="VerticalBorder">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="VerticalOverlayBorder">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="FooterBorder">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.CornerRadius" TargetName="FooterBorder">
                    <Setter.Value>
                        <CornerRadius>0,0,0,0</CornerRadius>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="FooterOverlayBorder">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.CornerRadius" TargetName="FooterOverlayBorder">
                    <Setter.Value>
                        <CornerRadius>0,0,0,0</CornerRadius>
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="FooterBackgroundOverlayBorder">
                    <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.CornerRadius" TargetName="FooterBackgroundOverlayBorder">
                    <Setter.Value>
                        <CornerRadius>0,0,0,0</CornerRadius>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="ResizeControl">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="ResizeControl">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.MenuBrushKey}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>