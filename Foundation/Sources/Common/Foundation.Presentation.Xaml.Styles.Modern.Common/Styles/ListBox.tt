<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="../_Global.tt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".xaml" #>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behaviors="http://schemas.squaredinfinity.com/foundation/behaviors">
    
    <Style x:Key="Styles.ListBoxItem"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle"             Value="{StaticResource Styles.FocusVisual}" />
        <Setter Property="Background"                   Value="Transparent"/>
        <Setter Property="Foreground"                   Value="<#=listitem_text#>" />
        <Setter Property="BorderThickness"              Value="0"/>
        <Setter Property="HorizontalContentAlignment"   Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"     Value="Center"/>
        <Setter Property="Margin"                       Value="0"/>
        <Setter Property="Padding"                      Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <Border Name="SelectionBorder" Visibility="Collapsed" />

                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="behaviors:ListItem.IsSelectible" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SelectionBorder" Property="Background" Value="<#=listitem_selected_background#>"/>
                            <Setter Property="Foreground" Value="<#= listitem_selected_text#>" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="behaviors:ListItem.GivesHoverFeedback" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SelectionBorder" Property="Background" Value="<#=listitem_hover_background#>"/>
                            <Setter Property="Foreground" Value="<#=listitem_hover_text#>" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="<#=listitem_disabled_text#>"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Styles.ListBoxItem.NoSelection"
           BasedOn="{StaticResource Styles.ListBoxItem}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="behaviors:ListItem.IsSelectible" Value="False"/>
    </Style>

    <Style x:Key="Styles.ListBoxItem.NoHoverFeedback"
           BasedOn="{StaticResource Styles.ListBoxItem}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="behaviors:ListItem.GivesHoverFeedback" Value="False"/>
    </Style>

    <Style x:Key="Styles.ListBoxItem.NoSelectionNoHoverFeedback"
           BasedOn="{StaticResource Styles.ListBoxItem}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="behaviors:ListItem.IsSelectible"          Value="False"/>
        <Setter Property="behaviors:ListItem.GivesHoverFeedback"    Value="False"/>
    </Style>

    <Style x:Key="Styles.ListBox" TargetType="{x:Type ListBox}">
        <Setter Property="FocusVisualStyle"         Value="{StaticResource Styles.FocusVisual}" />
        <Setter Property="ItemContainerStyle"       Value="{StaticResource Styles.ListBoxItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer Padding="{TemplateBinding Padding}" 
                                  Focusable="false" >
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Styles.ListBox.NoSelection"
           BasedOn="{StaticResource Styles.ListBox}"
           TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle"   Value="{StaticResource Styles.ListBoxItem.NoSelection}" />
    </Style>

    <Style x:Key="Styles.ListBox.NoSelectionNoHoverFeedback"
           BasedOn="{StaticResource Styles.ListBox}"
           TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle"   Value="{StaticResource Styles.ListBoxItem.NoSelectionNoHoverFeedback}" />
    </Style>

</ResourceDictionary>
