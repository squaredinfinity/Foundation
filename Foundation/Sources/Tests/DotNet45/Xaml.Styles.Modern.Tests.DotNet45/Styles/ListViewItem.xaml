
              
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behaviors="http://schemas.squaredinfinity.com/foundation/behaviors">

    <Style x:Key="Styles.ListViewItem"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle"                 Value="{x:Null}" />
        <Setter Property="Background"                       Value="Transparent" />
        <Setter Property="BorderBrush"                      Value="Transparent"/>
        <Setter Property="BorderThickness"                  Value="1"/>
        <Setter Property="Margin"                           Value="0"/>
        <Setter Property="Foreground"                       Value="#FF000000"/>
        <Setter Property="Padding"                          Value="5,2,5,2"/>
        <Setter Property="HorizontalContentAlignment"       Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"         Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border Name="SelectionBorder" Visibility="Collapsed" />

                        <GridViewRowPresenter Grid.RowSpan="2"
                                              x:Name="RowPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </GridViewRowPresenter>

                        <ContentPresenter x:Name="ContentPresenter"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          Margin="{TemplateBinding Padding}"
                                          Visibility="Collapsed"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                            <Setter TargetName="RowPresenter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="behaviors:ListItem.IsSelectible" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="behaviors:Highlight.SelectionHighlightBrush" Value="#266Fa0" />
                            <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SelectionBorder" Property="Background" Value="#266Fa0"/>
                            <Setter Property="Foreground" Value="#FFF6F6F6" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="behaviors:ListItem.IsSelectible" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="behaviors:Highlight.SelectionHighlightBrush" Value="#E2D1FF" />
                            <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SelectionBorder" Property="Background" Value="#266Fa0"/>
                            <Setter Property="Foreground" Value="#FF333333" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="behaviors:ListItem.GivesHoverFeedback" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="behaviors:Highlight.HoverHighlightBrush" Value="#FFDDDDDD" />
                            <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SelectionBorder" Property="Background" Value="#FFDDDDDD"/>
                            <Setter Property="Foreground" Value="#FF333333" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#717171"/>
                        </Trigger>

                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#F4EDFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Styles.ListViewItem.NoSelection"
           BasedOn="{StaticResource Styles.ListViewItem}"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="behaviors:ListItem.IsSelectible" Value="False"/>
    </Style>

    <Style x:Key="Styles.ListViewItem.NoHoverFeedback"
           BasedOn="{StaticResource Styles.ListViewItem}"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="behaviors:ListItem.GivesHoverFeedback" Value="False"/>
    </Style>

    <Style x:Key="Styles.ListViewItem.NoSelectionNoHoverFeedback"
           BasedOn="{StaticResource Styles.ListViewItem}"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="behaviors:ListItem.IsSelectible"          Value="False"/>
        <Setter Property="behaviors:ListItem.GivesHoverFeedback"    Value="False"/>
    </Style>

</ResourceDictionary>
