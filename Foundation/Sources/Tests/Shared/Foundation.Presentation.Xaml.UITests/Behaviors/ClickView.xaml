<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:behaviors="http://schemas.squaredinfinity.com/foundation/behaviors"
                    xmlns:local="clr-namespace:SquaredInfinity.Foundation.Presentation.Xaml.UITests.Behaviors"
                    mc:Ignorable="d" >

    <Style TargetType="{x:Type local:ClickView}">
        <Style.Setters>
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:ClickView}">

                        <StackPanel Orientation="Vertical">

                            <TextBlock Text="Click Me"
                                       Margin="5,10,5,10"
                                       behaviors:Click.Command="{CommandMethodBinding @TemplatedParent.ViewModel.ShowSingleClickMessage}" />

                            <!-- Easiest way to support double-click on UI Elements not deriving from System.Windows.Control is to wrap them in ContentControl and handle double click there -->
                            
                            <ContentControl behaviors:DoubleClick.Command="{CommandMethodBinding @TemplatedParent.ViewModel.ShowDoubleClickMessage}"
                                            Margin="5,10,5,10">
                                <ContentControl.Content>
                                    <TextBlock Text="Double Click Me" />
                                </ContentControl.Content>
                            </ContentControl>


                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
</ResourceDictionary>
