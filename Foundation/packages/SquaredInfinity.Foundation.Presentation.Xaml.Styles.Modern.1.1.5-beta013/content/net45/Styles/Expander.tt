<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="../_Global.tt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".xaml" #>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="Styles.ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" 
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Border x:Name="Border" 
                                        BorderThickness="1" 
                                        HorizontalAlignment="Center" 
                                        Height="19"
                                        BorderBrush="<#=control_border#>" 
                                        VerticalAlignment="Center" 
                                        Width="19"/>
                                <Path x:Name="arrow" 
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5" 
                                      HorizontalAlignment="Center" 
                                      SnapsToDevicePixels="false" 
                                      Stroke="<#=scrollbar_arrow#>"
                                      StrokeThickness="2" 
                                      VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter	HorizontalAlignment="Center" 
												Margin="0,4,0,0" 
												Grid.Row="1" 
												RecognizesAccessKey="True" 
												SnapsToDevicePixels="True" 
												VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_hover_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=control_hover_text#>"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_pressed_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=accent#>"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_disabled_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=control_disabled_text#>"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Styles.ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Border x:Name="Border" 
                                        BorderThickness="1" 
                                        HorizontalAlignment="Center" 
                                        Height="19"
                                        BorderBrush="<#=control_border#>" 
                                        VerticalAlignment="Center" 
                                        Width="19"/>
                                <Path x:Name="arrow" 
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5" 
                                      HorizontalAlignment="Center" 
                                      SnapsToDevicePixels="false" 
                                      Stroke="<#=scrollbar_arrow#>" 
                                      StrokeThickness="2"
                                      VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter	Grid.Column="1" 
												HorizontalAlignment="Left" 
												Margin="4,0,0,0" 
												RecognizesAccessKey="True" 
												SnapsToDevicePixels="True" 
												VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_hover_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=control_text#>"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_pressed_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=accent#>"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_disabled_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=control_disabled_text#>"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Styles.ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Border x:Name="Border" 
                                        BorderThickness="1" 
                                        HorizontalAlignment="Center" 
                                        Height="19"
                                        BorderBrush="<#=control_border#>" 
                                        VerticalAlignment="Center" 
                                        Width="19"/>
                                <Path x:Name="arrow" 
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5" 
                                      HorizontalAlignment="Center" 
                                      SnapsToDevicePixels="false" 
                                      Stroke="<#=scrollbar_arrow#>" 
                                      StrokeThickness="2"
                                      VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter	HorizontalAlignment="Center" 
												Margin="0,4,0,0" 
												Grid.Row="1" 
												RecognizesAccessKey="True" 
												SnapsToDevicePixels="True" 
												VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_hover_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=control_text#>"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_pressed_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=accent#>"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_disabled_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=control_disabled_text#>"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Styles.ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" 
                                        BorderThickness="1" 
                                        HorizontalAlignment="Center" 
                                        Height="19"
                                        BorderBrush="<#=control_border#>" 
                                        VerticalAlignment="Center" 
                                        Width="19"/>
                            <Path x:Name="arrow" 
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                  HorizontalAlignment="Center" 
                                  SnapsToDevicePixels="false" 
                                  Stroke="<#=scrollbar_arrow#>" 
                                  StrokeThickness="2"
                                  VerticalAlignment="Center"/>
                            <ContentPresenter	Grid.Column="1" 
												HorizontalAlignment="Left" 
												Margin="4,0,0,0" 
												RecognizesAccessKey="True" 
												SnapsToDevicePixels="True" 
												VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_hover_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=control_text#>"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_pressed_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=accent#>"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Border" Value="<#=control_disabled_border#>"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="<#=control_disabled_text#>"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="Styles.Expander" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="<#=control_text#>"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" 
							Background="{TemplateBinding Background}" 
							SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" 
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                          Content="{TemplateBinding Header}" 
                                          DockPanel.Dock="Top" 
                                          Foreground="{TemplateBinding Foreground}" 
                                          FontWeight="{TemplateBinding FontWeight}" 
                                          FocusVisualStyle="{StaticResource Styles.FocusVisual}" 
                                          FontStyle="{TemplateBinding FontStyle}" 
                                          FontStretch="{TemplateBinding FontStretch}" 
                                          FontSize="{TemplateBinding FontSize}" 
                                          FontFamily="{TemplateBinding FontFamily}" 
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Margin="1" 
                                          MinWidth="0" 
                                          MinHeight="0"
                                          Padding="{TemplateBinding Padding}" 
                                          Style="{StaticResource Styles.ExpanderDownHeaderStyle}" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            
                            
                            
                            <ContentPresenter x:Name="ExpandSite" 
                                              DockPanel.Dock="Bottom" 
                                              Focusable="false" 
                                              Margin="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Visibility="Collapsed" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource Styles.ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource Styles.ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource Styles.ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="<#=control_disabled_text#>"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


	<Style
		x:Key="Styles.SimpleExpanderHeader"
		TargetType="{x:Type ToggleButton}">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ToggleButton}">
					<Grid
						SnapsToDevicePixels="False">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="Auto" />
							<ColumnDefinition
								Width="*" />
						</Grid.ColumnDefinitions>
						<Path
							x:Name="arrow"
							Data="M0,4 H8 M4,0 V8"
							StrokeThickness="1"
							Stroke="<#=control_text#>"
							Fill="Transparent"
							Height="8"
							RenderTransformOrigin="0.5,0.5"
							VerticalAlignment="Center"
							Width="8">
							<Path.RenderTransform>
								<RotateTransform
									Angle="0" />
							</Path.RenderTransform>
						</Path>
						<ContentPresenter
							Grid.Column="1"
							HorizontalAlignment="Left"
							Margin="4,0,0,0"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="True"
							VerticalAlignment="Center" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsChecked"
							Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="arrow"
											Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
											To="360"
											Duration="0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="arrow"
											Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
											To="0"
											Duration="0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Setter
								TargetName="arrow"
								Property="Data"
								Value="M1,4 H6" />
						</Trigger>
						<Trigger
							Property="IsMouseOver"
							Value="true">
							<Setter
								Property="Stroke"
								TargetName="arrow"
								Value="<#=control_hover_border#>" />
						</Trigger>
						<Trigger
							Property="IsPressed"
							Value="true">
							<Setter
								Property="Stroke"
								TargetName="arrow"
								Value="<#=control_pressed_border#>" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="false">
							<Setter
								Property="Stroke"
								TargetName="arrow"
								Value="<#=control_disabled_text#>" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="Styles.SimpleExpander"
		TargetType="{x:Type Expander}">
		<Setter
			Property="Foreground"
			Value="<#=control_text#>" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Expander}">
					<DockPanel>
						<ToggleButton
							x:Name="HeaderSite"
							Content="{TemplateBinding Header}"
							DockPanel.Dock="Top"
							Foreground="{TemplateBinding Foreground}"
							IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							Margin="1"
							MinWidth="0"
							MinHeight="0"
							Padding="{TemplateBinding Padding}"
							Style="{StaticResource Styles.SimpleExpanderHeader}" />
						<ContentPresenter
							x:Name="ExpandSite"
							DockPanel.Dock="Bottom"
							Focusable="false"
							Visibility="Collapsed" />
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsExpanded"
							Value="true">
							<Setter
								Property="Visibility"
								TargetName="ExpandSite"
								Value="Visible" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="false">
							<Setter
								Property="Foreground"
								Value="<#=control_disabled_text#>" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
