<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="../_Global.tt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".xaml" #>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behaviors="http://schemas.squaredinfinity.com/foundation/behaviors">

    <Style x:Key="Styles.TextBoxBase"
           TargetType="{x:Type TextBoxBase}" 
           BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle"                                 Value="{StaticResource Styles.FocusVisual}"/>
        <Setter Property="Foreground"                                       Value="<#=input_text#>"/>
        <Setter Property="Background"                                       Value="<#=input_background#>"/>
        <Setter Property="BorderBrush"                                      Value="<#=input_border#>"/>
        <Setter Property="BorderThickness"                                  Value="1"/>
        <Setter Property="Padding"                                          Value="2,1,1,1"/>
        <Setter Property="AllowDrop"                                        Value="true"/>
        <Setter Property="ScrollViewer.PanningMode"                         Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled"                           Value="False"/>
        <Setter Property="VerticalScrollBarVisibility"                      Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility"                    Value="Auto" />
        <Setter Property="SelectionBrush"                                   Value="<#=accent#>" />
        <Setter Property="behaviors:Watermark.Text"                         Value="{x:Null}" />
        <Setter Property="behaviors:ClearButton.IsVisible"       Value="False" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Border BorderThickness="1" 
                                BorderBrush="<#=error#>" 
                                VerticalAlignment="Top">
                            <Grid>
                                <AdornedElementPlaceholder x:Name="ErrorAdorner" 
                                                           Margin="-1"/>
                            </Grid>
                        </Border>
                        <Border x:Name="ErrorBorder" 
                                Background="<#=error#>" 
                                Margin="8,0,0,0"
                                Opacity="0" 
                                CornerRadius="0"
                                IsHitTestVisible="False"
                                MinHeight="24" >

                            <TextBlock Text="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                       Foreground="<#=control_text#>"
                                       Margin="8,2,8,3"
                                       TextWrapping="Wrap" 
                                       VerticalAlignment="Center"/>
                        </Border>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding ElementName="ErrorAdorner" Path="AdornedElement.IsKeyboardFocused" />
                            </DataTrigger.Binding>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="fadeInStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.15"
                                                         Storyboard.TargetName="ErrorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                                <BeginStoryboard x:Name="fadeOutStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00"
                                                         Storyboard.TargetName="ErrorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Grid>

                            <ScrollViewer x:Name="PART_ContentHost"
                                          Padding="0"
                                          Margin="0"
                                          Background="{x:Null}"
										  Foreground="{TemplateBinding Foreground}"
                                          BorderThickness="0"
                                          VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                          HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <TextBlock x:Name="Watermark"
								   Padding="0"
                                   Margin="{TemplateBinding Padding}"
                                   Text="{TemplateBinding behaviors:Watermark.Text}"
                                   Foreground="<#=watermark#>"
                                   Background="{x:Null}"
                                   Visibility="{TemplateBinding behaviors:Watermark.IsVisible, Converter={StaticResource Converters.VisibleWhenTrue}}"/>


                                <Button x:Name="PART_ClearButton" 
                                    Visibility="{TemplateBinding behaviors:ClearButton.IsVisible, Converter={StaticResource Converters.VisibleWhenTrue}}"
                                    Style="{StaticResource Styles.Button.TextBoxAction.Clear}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false"> 
                            <Setter Property="Foreground" Value="<#=input_disabled_text#>"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Foreground" Value="<#=input_disabled_text#>"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="<#=input_hover_background#>"/>
                            <Setter Property="BorderBrush" Value="<#=input_hover_border#>"/>
                            <Setter Property="Foreground" Value="<#=input_hover_text#>"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="Styles.TextBox"
           BasedOn="{StaticResource Styles.TextBoxBase}"
           TargetType="{x:Type TextBox}" />

    <Style x:Key="Styles.TextBoxAsSelectibleTextBlock"
           BasedOn="{StaticResource Styles.TextBoxBase}"
           TargetType="{x:Type TextBox}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="<#=input_text#>" />
    </Style>

</ResourceDictionary>
